<launch>
    <let name="urdf_path" 
        value="$(find-pkg-share mini_mec_description)/urdf/mini_mec_robot.urdf.xacro"/>
    <let name="rviz_config_path" 
        value="$(find-pkg-share mini_mec_bringup)/rviz/urdf_config.rviz"/>
     
    <node pkg="robot_state_publisher" exec="robot_state_publisher">
    
        <param name="robot_description" value="$(command 'xacro $(var urdf_path)')"/>
    </node>
    <node pkg="joint_state_publisher" exec="joint_state_publisher">
        <param name="use_gui" value="true"/>
    </node>
    <include file="$(find-pkg-share gazebo_ros)/launch/gazebo.launch.py">
        <!--
            <arg name="world" value="$(find-pkg-share mini_mec_bringup)/worlds/small_house.world"/>
        -->
    </include>

    <node pkg="gazebo_ros" exec="spawn_entity.py" 
        args="-topic robot_description -entity mini_mec_robot"/>
        
    <node pkg="rviz2" exec="rviz2" output="screen" 
        args="-d $(var rviz_config_path)"/>
    
    <node pkg="octomap_server" exec="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.05" />
    
        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" value="base_link" />
    
         <!-- maximum range to integrate (speedup!) -->
         <param name="sensor_model.max_range" value="5.0" />
    
        <!-- data source to integrate (PointCloud2) -->
        <remap from="cloud_in" to="/lidar_sensor/out" />
        </node>
</launch>